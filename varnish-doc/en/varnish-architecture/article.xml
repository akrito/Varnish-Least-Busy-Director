<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="../../share/docbook-xml.css"?>
<!DOCTYPE article
 PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
 "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article lang="en">
  <articleinfo>
    <releaseinfo role="cvs">$Id$</releaseinfo>
    <title>Varnish HTTP Accelerator Architecture</title>
  </articleinfo>

  <section>
    <title>Application structure</title>

    <section>
      <title>Components</title>

      <para>This section lists the major components in Varnish.</para>

      <section>
	<title>Listener</title>

	<para>The Listener monitors the listening socket and accepts
	incoming client connections.  Once the connection is
	established, it is passed to the Accepter.</para>

	<para>The Listener should take advantage of accept filters or
	similar technologies on systems where they are
	available.</para>
      </section>

      <section>
	<title>Accepter</title>

	<para>The Accepter reads an HTTP request from a client
	connection.  It parses the request line and header only to the
	extent necessary to establish well-formedness and determine
	the requested URL.</para>

	<para>The Accepter then queries the Keeper about the status of
	the requested document (identified by its full URL).  If the
	document is present and valid in the cache, the request is
	passed directly to a Sender.  Otherwise, it is passed to a
	Retriever queue.</para>
      </section>

      <section>
	<title>Keeper</title>

	<para>The Keeper manages the document cache. XXX</para>
      </section>

      <section>
	<title>Sender</title>

	<para>The Sender transfers the contents of the requested
	document to the client.  It examines the HTTP request header
	to determine the correct way in which to do this – Range,
	If-Modified-Since, Content-Encoding and other options may
	affect the type and amount of data transferred.</para>

	<para>There may be multiple concurrent Sender threads.</para>
      </section>

      <section>
	<title>Retriever</title>

	<para>The Retriever is responsible for retrieving documents
	from the content servers.  It is triggered either by an
	Accepter trying to satisfy a request for a document which is
	not in the cache, or by the Janitor when a “hot” document is
	nearing expiry.  Either way, there may be a queue of requests
	waiting for the document to arrive; when it does, the
	Retriever passes those requests to a Sender.</para>

	<para>There may be multiple concurrent Retriever
	threads.</para>
      </section>

      <section>
	<title>Janitor</title>

	<para>The Janitor keeps track of the expiry time of cached
	documents and attempts to retrieve fresh copies of documents
	which are soon to expire.</para>
      </section>

      <section>
	<title>Logger</title>

	<para>The Logger keeps logs of various types of events in
	circular shared-memory buffers.  These buffers must be managed
	using either POSIX shared memory primitives or file-backed
	mmap(2).</para>

	<para>It is the responsibility of each module to feed relevant
	log data to the Logger.</para>
      </section>
    </section>
  </section>

  <bibliography>
    <title>References</title>

    <bibliomixed id="RFC2616"/>
  </bibliography>
</article>
