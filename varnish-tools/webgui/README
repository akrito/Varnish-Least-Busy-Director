Web UI for Varnish
===================

Overview
--------

The web UI is written in Perl and runs in its own server container, so a web server is not required, only the necessary Perl modules. The UI consists of five sections: 'View stats', 'Configure parameters', 'Edit VCL', 'Node management' and 'Management console'. As the names might suggest, the UI let you

- view statistics and graphs from the Varnish nodes
- configure the parameters of the Varnish nodes and groups
- edit the VCL for each group, which will be shared between all the nodes, and the standalone nodes
- perform node management, like adding groups and nodes, get the state of the nodes and backend healths, starting groups and nodes, stopping etc.
- get access to the management console of each node

Requirements
------------

The web UI is written in Perl, and uses some modules that might not be installed by default:

- HTTP::Daemon (libwww-perl)
- HTML::Template (libhtml-template-perl)
- GD::Graph (libgd-graph-perl) 
- LWP::UserAgent (libwww-perl)
- Algorithm::Diff (libalgorithm-diff-perl)
- DBD::Sqlite3 (libdbd-sqlite3-perl)
- Digest::SHA (libdigest-sha-perl)


The name in the paranthesis are the package name on a standard Ubuntu system. The rest of the modules should be pretty standard.

As the management port of the Varnish instances are used for collecting data, this must be enaled when starting varnish. This is done with the -T option to varnish, e.g. like this

$ /opt/varnish/sbin/varnishd -a :80 -b :8080 -T :9003

To get authentication for the mangement console, apply the -S option to varnishd. Please refer to the man page for how to set it up.

Configuration
-------------

The UI can be configured using a config file with a key=value format. An example config file, example.conf, is included to show the valid keys. The config file is supplied as an argument to varnish-webui.pl, and if omitted it will check /etc/varnish/webui.conf. If no config file is available it will use the default config, which is to run it from its own directory on port 8000. See the varnish-webui.pl source for the default values.

Before using it, you must create a sqlite3 database. This can be done by issuing

$ sqlite3 varnish.db < varnish_webui.sql

Change varnish.db to the name of the file you set in the config file.

Starting it
-----------

'perl varnish-webui.pl' should do it, optionally giving a config file as argument, after reading the Configuration section on how to configure it. If the shebang matches your perl, and the script is executable, './varnish-webui.pl' should also do it.

The UI
======

View stats
----------

In 'View stats' you will see graphs and statistics gathered from the groups and nodes. The 'Summary statistics' shows the most important statistics, but if you want to see all the statistics from the Varnish nodes you turn 'Raw statistics' on. If you want the page to be refreshed automatically in order to follow the graph 'live', you can turn 'Auto refresh' on. The refresh rate is the same as the rate the statistics are collected from the nodes. If you want to export the raw data as CSV, use the 'Raw data as CSV' link.

Configure parameters
--------------------

'Configure' parameters let you configure the parameters for a group or a single node. Changing a value in a group will change the same value of all the nodes in that group. Changing a value for node only changes that node, naturally. 

Edit VCL
--------

'Edit VCL' lets you edit the VCL of a group or standalone node, and any changes made here will be reflected on all the nodes of the group. You can add, edit, save and discard VCLs as well as making a VCL active.

A note about the editor: it is a simple text are, with <tab> giving you an indent as expected. If you save a VCL with error, the errors are listed and you can click on the 'Line X Pos Y' information in the error list to jump to that position in the editor.


Node management
---------------

From 'Node management' you can manage groups and nodes. It will let you add, remove, stop and start the nodes and groups. It also displays information about the state of the node:
 - the V column is the state of Varnish. Green means it responds with a 200 message to a probe (it probes http://varnish-host/), a yellow light means it anwers with a non-200 status code and a red light means it does not respond at all.
 - the M columns is the state of the management port, with green meaning OK and red meaning it is not reachable. As almost all functionality is dependent on the management port, it should never have a red light.

If a health probe is defined in the VCL, a list of backend healths for the running VCL is shown as well.

WARNING: Adding nodes to a group, or changing the group of a node,  will replace that nodes parameter and VCL.

Management console
------------------

'Management console' gives you access to the management console of each node. The input field has magical tab completion for the CLI commands and a command history accessable by arrow up/down. In addition to the standard CLI commands, 'cls' can be issued to clear the console.

The color and size of the console can be changed, but this information is unfortunately not stored when switching nodes.
